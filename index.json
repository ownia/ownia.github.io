[{"content":" Inside.No.9.S03.E03.the.riddle.of.the.Sphinx 斯芬克斯的谜语\n 开胃菜：\n先来看看这个 What’s long and hard and full of semen？通过谐音双关，semen变换为seamen，谜底也就出来了： submarine。\n如果是这道题呢？\nI TEACH WILD CREATURE WITHOUT HOSPITAL BUILDING – (12)\n12指谜底由12个字母组成。\n在clue的开头和结尾总是包含两个解谜提示来告诉谜底的含义，其他部分就是wordplay。WILD就是一个anagram-indicator，代表字母可以变换顺序来重新排列（例如upset，excited，insane），所以要去mix up字母。要mix up那些字母呢？\n在这我们就要考虑I TEACH CREATURE，可以发现它重复了两个字母。再看WITHOUT HOSPITAL，HOSPITAL就代表A\u0026amp;E（Accident\u0026amp;Emergency）。它也恰好是上一个句子里重复的两个字母，WITHOUT提示我们要把它删除。删除之后只剩下12个字母，所以要把它重新排列为一个含12个字母的字母变位词。再看最后一个单词BUILDING，将这12个字母重新排列后成为一个指代BUILDING的单词，谜底即为ARCHITACTURE。\n留个谜题：What’s pink and hard in the morning？\n主菜：\n来看看正宗的crossword吧。\n{% asset_img empty-crossword.png %}\ncrossword分为横行across和纵行down。每个开头都有标号，通过给出的提示，来填满所有空格。\n先来看看ACROSS的提示和解法。\n1. To wound and wander destitute (4,3,3)\nTO WOUND AND WANDER作为表示动作的动词或形容词，用来描述destitute的4-3-3词语就是Down-and-out。\n9. Degas evacuated and bathed before putting big picture in bog\n如果要evacuate一些东西，就是指要clean它。所以就把degas的中间部分去掉，只剩DS，bathed也指swam，before提示要把swam放在ds前面。big picture就是指plan，把它put in在swam和ds的中间，就形成了swamplands，也是bog的意思。\n12. I hear American poet solved the riddle of the pseudo-hotel patron\n这个美国诗人是Edgar Guest。riddle solved就是mystery guessed。联系pseudo-hotel patron，谜底就是Mystery guest。\n15. Some smart aleck, no wit, allegedly (4,2,3)\n与know-it-all（贬义）类似。\n18. Tory leader on board for English flower (5)\nTory的首字母是t，剩下四个字母和T组成一个单词。flower这里双关，代指流体。English表示英国。而board有一个意思是rent，和T就组成了Trent，它是一条英国英格兰中部的河流。\n再看看DOWN的提示和解法：\n1. Indian national product of French-Italian agreement\n关键词是法国的，而又是意大利中一种表示同意(合约和同意双关)的方式(si)，又要和印度相关，所以谜底是desi。\n2. This cover sounds like a 50 Cent song\n考察的是homophone。50 Cent song指代Rap，一个homophone来表示cover又和rap同音，所以谜底为wrap。\n3. A disturbed setter concealed a tiny amount. Why, it\u0026rsquo;s enough to take one\u0026rsquo;s breath away.\nsetter指代Mr Sphinx，所以就是字母A后面跟着sphinx的anagram。tiny mount在希腊语中是Iota，也是希腊字母表中的第九个字母。why是Y的homophone，也是隐藏的那个tiny amount。要表示take one\u0026rsquo;s breath away，谜底就是asphyxiation。\n5. Knocked back beer and wine then put on one French undergarment\nKnocked back表示要反写句子。beer的一种是Pils（皮尔森啤酒），wine的一种是Red，反写之后就是slip和der。one在French中是Un。把它们组合在一起就是underslip，和undergarment一个意思。\n7. Catch a train before a poisonous bite\nCatch通常是指抓鱼，a train before指puffer（蒸汽火车），puffer另一个意思是河豚。谜底就是Puffer fish。\n14. Dickens character undertakes to be a cabinet maker\nDickens指英国作家狄更斯，Oliver Twister是其代表作《雾都孤儿》，Sowerberry是其中人物，也是棺材制造商。\n22. What is a frankfurter\u0026rsquo;s number-one bun\nfrankfurter是指法兰克福香肠，常夹在面包卷中。不以one或bun开头，那就是Neun，它是德语（法兰克福）的数字九。\n23. The origins of a species popularised savage serpents\nOrigins提示要使用a species popularised savage里的每个单词第一个字母组成asps，它的意思和serpents一样。\n剧里到最后也没有能够填完crossword，还留下很多空格。不过重看整体，能发现也是隐藏了不少东西的。\n{% asset_img full-crossword.png %}\nI swapped cups\nRIP NHS\n","permalink":"http://ownia.top/posts/inside_no.9_s03_e03_riddle/","summary":"\u003cblockquote\u003e\n\u003cp\u003eInside.No.9.S03.E03.the.riddle.of.the.Sphinx\n斯芬克斯的谜语\u003c/p\u003e\n\u003c/blockquote\u003e","title":"谈谈九号秘事S03.E03中的字谜"},{"content":" 正是峰前回雁时\n 距上一次整理也相隔2个多月了，这次应该是剩下最终的中国导演补片名单了，从第1代导演到第6代导演，从大陆到港台，基本是现阶段对于中国导演领域认知的极限了。接下来应该是注目于亚洲导演了，当然这是后话了。\n王童，张亚璇，王超，王兵，雎安奇，何建军，杨平道，张石川，杨小仲，朱石麟，万古蟾，卜万苍，沈西苓，沈浮，郑君里，崔嵬，桑弧，王苹，凌子风，沈耀庭，吴贻弓，黄蜀芹，吴天明，张暖忻，黄健中，陆小雅，谢飞，滕文骥，郑洞天，米家山，杨亚洲，霍建起，路学长，徐童，周浩，赵亮，李行，白景瑞，陈玉勋，林正盛，易智言，张作骥，胡金铨，方育平，杨凡，张婉婷，严浩。\n（顺序不分先后）\n","permalink":"http://ownia.top/posts/the_road_to_chinese_director_film_2/","summary":"\u003cblockquote\u003e\n\u003cp\u003e正是峰前回雁时\u003c/p\u003e\n\u003c/blockquote\u003e","title":"中国导演电影补全计划(2)"},{"content":"之所以写这篇文章，是因为之前还觉得自己阅片量还可以，但随着对电影这一门艺术的了解越来越深入，愈发觉察自己知之甚少。\n从香港电影到台湾电影，韩国电影到日本电影，苏联电影到美国好莱坞，法国新浪潮到德国表现主义，意大利新现实主义到欧洲先锋电影，乃至巴西的、南美的，甚至说Cult Film、Synth Film、Giallo Film，自己还只停留在表面。\n开启补全计划，一方面为了从自身出发，另一方面为了避免杂乱无章，所以决定从中国导演开始。而在标题后面加个序号，也是为了之后增删改查的便宜。所谓补全，很显然要把该导演的作品看一遍，剔除网络上已找不到的资源之外，大概能把每人的作品看个90%。因此就有必要筛选导演名单。以下所述名单的筛选具有极强的主观意识，属于个人观点。\n  首先剔除基本只拍烂片的导演，例如毕志飞之流。\n  专注于拍商业片、院线的也去除，一是没那么多时间看这些片子，二是这些之前也看得七七八八了，例如王晶，冯小刚，张艺谋等。\n  偶有好片，但未到精品的也抛弃，例如毕赣，章明，范俭等。\n  能够进入补全名单，但所拍作品基本看完的也不列入，例如李安，忻钰坤，王家卫等。\n  拍过经典，之后随波逐流与市场或者才气不足的也除外，例如陈凯歌，李玉，姜伟，张猛，张黎，管虎，顾长卫，张杨，伍仕贤，李杨等。\n  好片居多，因自己主观而剔除的，例如姜文，宁浩，林超贤，曹保平，陈果等。\n  剔除名单里，最为可惜的就是第5类导演，在此略过不谈，不再赘述。根据主观的筛选之后，如下的名单就是进入我第一批中国导演补全计划的人(补片顺序不分先后)：\n吴永刚，孙瑜，贾樟柯，费穆，杨德昌，蔡楚生，李睿珺，蔡明亮，娄烨，王小帅，王竞，赵德胤，张元，谢晋，袁牧之，程刚，侯孝贤。\n 晴天归路好相逐\n 补片之路漫长，文章掷笔于此，且作一拾遗之处。\n","permalink":"http://ownia.top/posts/the_road_to_chinese_director_film_1/","summary":"\u003cp\u003e之所以写这篇文章，是因为之前还觉得自己阅片量还可以，但随着对电影这一门艺术的了解越来越深入，愈发觉察自己知之甚少。\u003c/p\u003e","title":"中国导演电影补全计划(1)"},{"content":"树莓派官网raspberrypi.org下载Raspbian stretch with desktop，通过Win32DiskImager烧录进16gSD卡中，出现如下错误： {% asset_img raspberry.jpg %} 在官网上找到类似问题，https://raspberrypi.stackexchange.com/questions/17023/panic-vfs-unable-to-mount-root-fs-on-unknown-block179-2， 但是没有得到解决。 通过百度得知可以使用sudo fsck -f -v -r /dev/sdb2之类的fsck命令解决。在deepin上使用此命令后错误没有得到解决。 尝试使用官网的noobs进行安装。 使用DiskGenius对已经烧录过的SD卡进行重新分区并格式化，烧录noobs系统。 安装时一直循环resizing fat partition。 解决方法：在使用DiskGenius之后，再使用电脑自带的格式化再次格式化，文件系统为FAT32，分配单元大小为16kb。最终成功安装。 使用noobs安装则不能开启expand Filesystem。 安装之后开启修改国内源，如果没有文件权限则使用chmod命令修改权限，在Raspberry Pi Configuration中开启SSH和VNC。 sudo ifconfig可以查看ip地址。\n","permalink":"http://ownia.top/posts/dealing_with_raspberrypi3b/","summary":"树莓派官网raspberrypi.org下载Raspbian stretch with desktop，通过Win32DiskImager烧录进16gSD卡中，出现如下错误： {% asset_img raspberry.jpg %} 在官网上找到类似问题，https://raspberrypi.stackexchange.com/questions/17023/panic-vfs-unable-to-mount-root-fs-on-unknown-block179-2， 但是没有得到解决。 通过百度得知可以使用sudo fsck -f -v -r /dev/sdb2之类的fsck命令解决。在deepin上使用此命令后错误没有得到解决。 尝试使用官网的noobs进行安装。 使用DiskGenius对已经烧录过的SD卡进行重新分区并格式化，烧录noobs系统。 安装时一直循环resizing fat partition。 解决方法：在使用DiskGenius之后，再使用电脑自带的格式化再次格式化，文件系统为FAT32，分配单元大小为16kb。最终成功安装。 使用noobs安装则不能开启expand Filesystem。 安装之后开启修改国内源，如果没有文件权限则使用chmod命令修改权限，在Raspberry Pi Configuration中开启SSH和VNC。 sudo ifconfig可以查看ip地址。","title":"RaspberryPi3B的使用问题"},{"content":"MineSweeper的实现思路  使用二维的vector容器数组存储gameMap 使用结构体MineBlock存储gameMap信息 使用枚举法判断周围的地雷数量 使用递归法进行挖雷 计算周围地雷数量时要排除本身 标记分为错误标记(MARKED)和正确标记(WRONG_MARK)，需要对两个标记进行区分(在ui层游戏结束时做绘制区分) 一个方块如果标记两次会回到UNDIG的状态  在构造函数里面不做具体初始化，因为构造函数的调用时间不确定 界面设置\nblockSize = 20; //方块大小 offsetX = 5; //横向边距 offsetY = 5; //纵向边距 scroeboardY = 70; //记分板高度 设置窗口控件固定大小\ngame -\u0026gt; mCol * blockSize + offsetX * 2 game -\u0026gt; mRow * blockSize + offsetY * 2 + scroeboardY (game -\u0026gt; mCol) * 20 + 5 * 2 (game -\u0026gt; mRow) * 20 + 5 * 2 + 70 drawPixmap()使用GPU处理，相对减轻了CPU的负担\nvoid QPainter::drawPixmap(int x, int y, const QPixmap \u0026amp; pixmap, int sx = 0, int sy = 0, int sw = -1, int sh = -1) 通过把pixmap的一部分复制到绘制设备中，在(x, y)绘制一个像素映射。 (x, y)指定了要被绘制的绘制设备的左上点 (sx, sy)指定了要被绘制的pixmap中的左上点，默认为(0, 0)。 (sw, sh)指定了要被绘制的pixmap的大小，默认(-1, -1)，意思是一直到像素映射的右下。 当在QPrinter上绘制时，当前像素映射的遮蔽或者它的alpha通道被忽略。\n游戏的四种状态\ncase OVER: painter.drawPixmap((game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 - 12, scroeboardY / 2 + 3.5, bmpFaces, 0 * 24, 0, 24, 24); break; case PLAYING: painter.drawPixmap((game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 - 12, scroeboardY / 2+ 3.5, bmpFaces, 1 * 24, 0, 24, 24); break; case WIN: painter.drawPixmap((game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 - 12, scroeboardY / 2+ 3.5, bmpFaces, 2 * 24, 0, 24, 24); break; default: painter.drawPixmap((game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 - 12, scroeboardY / 2+ 3.5, bmpFaces, 1 * 24, 0, 24, 24); break; ((game -\u0026gt; mCol) * 20 + 5 * 2))/2 -12先取控件宽度中心，再减去图像大小24的一半12，获得x轴位置 70 / 2 + 3.5 = 38.5取记分板高度70的一半加3.5，获得y轴位置 0 * 24第一个图形的sx值 1 * 24第二个图形的sx值 2 * 24第三个图形的sx值 三个图形的sy值都为0 要绘制的pixmap大小即为24\nint n = game -\u0026gt; currentMineNumber; int posX = 50; if(n \u0026lt; 0) { painter.drawPixmap(posX, scroeboardY / 2 + 1.5, bmpTimeNumber, n * 20, 0, 20, 28); } while(n \u0026gt; 0) { painter.drawPixmap(posX - 20, scroeboardY / 2 + 1.5, bmpTimeNumber, n % 10 * 20, 0, 20, 28); //每次从后面绘制一位 \tn /= 10; posX -= 20; } posX = 50获得x轴位置 70 / 2 + 1.5 = 36.5取记分板高度70的一半加1.5，获得y轴位置 n % 10 * 20先取最后一位数字 n /= 10, posX -= 20向前移一位，取得第一位数字\ncurrentState的状态\nswitch(game -\u0026gt; gameMap[i][j].currentState) { case UNDIG: painter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY , bmpBlocks, blockSize * 10, 0, blockSize, blockSize); break; case DIGGED: painter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY, bmpBlocks, blockSize * game -\u0026gt; gameMap[i][j].valueFlag, 0, blockSize, blockSize); break; case MARKED: painter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY, bmpBlocks, blockSize * 11, 0, blockSize, blockSize); break; case BOMB: painter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY, bmpBlocks, blockSize * 9, 0, blockSize, blockSize); break; case WRONG_MARK: if(game-\u0026gt;gameState == PLAYING || game-\u0026gt;gameState == FAULT) { //如果还在游戏中就显示旗子 \tpainter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY, bmpBlocks, blockSize * 11, 0, blockSize, blockSize); } else if(game-\u0026gt;gameState == OVER) { //如果游戏已经结束，就显示标错了 \tpainter.drawPixmap(j * blockSize + offsetX, i * blockSize + offsetY + scroeboardY, bmpBlocks, blockSize * 12, 0, blockSize, blockSize); } break; default: break; } game -\u0026gt; gameMap[i][j].currentState获得该方块的状态 j * 20 + 5获得x轴位置 i * 20 + 5 + 70获得y轴位置 根据状态UNDIG，DIGGED，MARKED，BOMB，WRONG_MARK分别绘制相应图像 其中比较特殊的是DIGGED和WRONG_MARK\nDIGGED的pixmap的sx选取是通过20 * game -\u0026gt; gameMap[i][j].valueFlag来选取 WRONG_MARK的对应绘制图像是要先判断游戏是否结束，然后分别显示不同的图像\nif(x \u0026gt;= (game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 - 12 \u0026amp;\u0026amp; x \u0026lt;= (game -\u0026gt; mCol * blockSize + offsetX * 2) / 2 + 12 \u0026amp;\u0026amp; y \u0026gt;= scroeboardY / 2 + 3.5 \u0026amp;\u0026amp; y \u0026lt;= scroeboardY / 2 + 3.5 + 24) 判断鼠标指针是否点击了faces图案\nif(x \u0026gt;= (game -\u0026gt; mCol * 20 + 5 * 2) / 2 - 12 \u0026amp;\u0026amp; x \u0026lt;= (game -\u0026gt; mCol * 20 + 5 * 2) / 2 + 12 \u0026amp;\u0026amp; y \u0026gt;= 70 / 2 + 3.5 \u0026amp;\u0026amp; y \u0026lt;= 70 / 2 + 3.5 + 24) 计算得出鼠标所点击的block的row值和col值\nint px = event-\u0026gt;x() - offsetX; int py = event-\u0026gt;y() - offsetY - scroeboardY; int row = py / blockSize; int col = px / blockSize; ","permalink":"http://ownia.top/posts/minesweeperdesign/","summary":"\u003ch4 id=\"minesweeper的实现思路\"\u003eMineSweeper的实现思路\u003c/h4\u003e","title":"扫雷MineSweeper的设计"},{"content":"在脚尖的世界里，他觉得自己一直很孤独。每天大部分时间都被袜子所束缚。\n在外界眼中，袜子是彩色的，煞人眼球。\n而对于自己，袜子等于黑暗。\n袜子给自己的，是透不过气的窒息感，是睁不开眼的无所适从。\n","permalink":"http://ownia.top/posts/toes/","summary":"\u003cp\u003e在脚尖的世界里，他觉得自己一直很孤独。每天大部分时间都被袜子所束缚。\u003c/p\u003e","title":"脚尖"},{"content":"XPS13使用Windows10开发者预览版快速通道更新17035.1000之后，打开电脑一段时间后会出现BAD_POOL_CALLER绿屏，只能通过重启解决。\n在设置-\u0026gt;开发者预览里把快速通道调至慢速通道后，再次绿屏，错误代码为SYSTEM_THREAD_EXCEPTION_NOT_HANDLED，此时不能进入系统主界面。在安全模式中删除Realtek的驱动，还是无效。备份系统所有数据到移动硬盘。尝试不删除数据重置电脑，出现“计算机意外地重新启动或遇到错误，windows安装无法继续”。回滚系统。尝试删除个人数据重置电脑，再次出现“计算机意外地重新启动或遇到错误，windows安装无法继续”，此时无法回滚。尝试运行oobe里的msoobe.exe，还是无效。 最终只有用u盘重装系统一条路。最后使用一个16g的HP u盘进行了恢复盘安装。通过dell微信客服问来https://www.microsoft.com/zh-cn/software-download/windows10?linkId=44645463 网址获取镜像。安装u盘时，因为是通过uefi格式安装，所以不修改bios设置会出现问题，修改uefi secure boot和legacy boot都为off，重新进入F12，开始重装系统。过程基本顺利，删除所有分区之后新建分区。从1507更新到1709系统。驱动根据服务标签在http://www.dell.com/support/home/cn/zh/cndhs1?app=drivers\u0026amp;~ck=mn上查找，或者直接下载最新的Dell update应用程序自动查找所需驱动。 退出win10开发者预览通道，慢速和快速都退出，恢复稳定版本。\n","permalink":"http://ownia.top/posts/gsod_on_windows10_17035.1000/","summary":"\u003cp\u003eXPS13使用Windows10开发者预览版快速通道更新17035.1000之后，打开电脑一段时间后会出现BAD_POOL_CALLER绿屏，只能通过重启解决。\u003c/p\u003e","title":"Windows10 17035.1000的绿屏问题解决"},{"content":"雨霖铃 · 心请人访\n心请人访。免遭狐假①，涉我烟瘴。\n所从鹤老龟长②，余花谢了，投闲行傍。 相顾春来引步，柳亭雨翻巷。 又重续、芳草愁烟，便取河声那堪望。\n相逢祥“阳”醉梦泱，或畋游③、既弃渑水④上。 玉液不应兼进，殊不系、更无人唱。 宴乐西席，杵臼⑤、倏忽逾情溶漾。 重分手、垂钓曾约，去日朱藤杖⑥。\n①：出自《战国策·楚策一》“虎求百兽而食之，得狐。……虎以为然，故遂与之行。兽见之皆走，虎不知兽畏己而走也，以为畏狐也。”。此处代指借取别人声势。 ②：出自《新荷叶·莲萼飘香》。此处代指时间长。 ③：出自南朝梁 何逊《七召》：“此武材之矫猛，岂能从我而畋游。” 指畋猎游乐。 ④：古水名，在山东境内。 ⑤：出自《后汉书·吴佑传》：“时公沙穆东游太学，无粮，乃变服客佣，为佑凭舂。佑与语，大惊，遂共定交于杵臼之间。“比喻交朋友不计较贫富和身分。 ⑥：出自唐 白居易《朱藤杖紫骢吟》：“ 江州去日朱藤杖，忠州归时紫骢马。”此处代指旧时光。\n","permalink":"http://ownia.top/posts/the_poem_of_tang_dynasty_and_the_verse_of_song_dynasty/","summary":"\u003cp\u003e\u003cstrong\u003e雨霖铃 · 心请人访\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003e心请人访。免遭狐假①，涉我烟瘴。\u003c/p\u003e","title":"中国文学简史与选读之唐宋词史"},{"content":" 问题：给定一个整数序列，按照是非递减的顺序排列序列中的整数 输入：一个整数序列 输出：整数序列，其中的整数升序排列\n void bubble_sort(int *a, int size) { int i, j, t; for(i = 1; i \u0026lt; size; ++i) { for(j = 0; j \u0026lt; size -i; ++j) { if(a[j] \u0026gt; a[j+1]) { t = a[j]; a[j] = a[j+1]; a[j+1] = t; } } } } 时间复杂度分析 其外层循环执行 N - 1次。 内层循环最多的时候执行N次，最少的时候执行1次，平均执行(N+1)/2次。 所以循环体内的比较交换约执行(N - 1)(N + 1) / 2 = (N^2 - 1)/2。 按照计算复杂度的原则，去掉常数，去掉最高项系数，其复杂度为O(N^2)。\n冒泡算法的性能改进 上述算法的性能还有改进的空间。给定一个整数序列 [9, 3, 4, 5, 7]，每完成一次上述算法的外层循环，整数序列变化为：\n9, 3, 4, 5, 7 3, 4, 5, 7, 9 (i = 1) 3, 4, 5, 7, 9 (i = 2) 3, 4, 5, 7, 9 (i = 3) 3, 4, 5, 7, 9 (i = 4) 当第一次外层循环完成后，排序就完成了。后面的循环只有比较，而没有交换。 当一次外层循环中，相邻的元素没有发生交换，就说明数组已经是有序的了，这时可以跳出循环。 我们可以设置一个布尔变量，记录一次外层循环中是否发生交换，如果未发生交换，算法就返回。\nvoid bubble_sort_enhanced(int *a, int size) { int i, j, t; unsigned char swapped; for(i = 1; i \u0026lt; size; ++i) { swapped = 0; for(j = 0; j \u0026lt; size - i; ++j) { if(a[j] \u0026gt; a[j+1]) { t = a[j]; a[j] = a[j+1]; a[j+1] = t; swapped = 1; } } if(!swapped) break; } } 按照改进的算法，对于一个已经有序的数组，算法完成第一次外层循环后就会返回。 实际上只发生了N - 1次比较，所以最好的情况下，该算法复杂度是O(N)。\n","permalink":"http://ownia.top/posts/bubble_sort_complexity_analysis/","summary":"\u003cblockquote\u003e\n\u003cp\u003e问题：给定一个整数序列，按照是非递减的顺序排列序列中的整数\n输入：一个整数序列\n输出：整数序列，其中的整数升序排列\u003c/p\u003e\n\u003c/blockquote\u003e","title":"冒泡排序及其复杂度分析"},{"content":"慕课网（imooc）上一题：\n 递归函数练习 有5个人坐在一起，问第5个人多少岁？ 他说比第4个人大2岁。问第4个人岁数，他说比第3个人大2岁。 问第3个人，又说比第2人大两岁。 问第2个人，说比第1个人大两岁。 最后问第1个人，他说是10岁。 请问第5个人多大？ 程序分析： 利用递归的方法，递归分为回推和递推两个阶段。 要想知道第5个人岁数，需知道第4人的岁数，依次类推，推到第1人（10岁），再往回推。\n 网站做法：\n#include \u0026lt;stdio.h\u0026gt;int peopleage(n) { int age; if(n==1) age = 10; else age = peopleage(n-1)+2; return age; } int main() { int fifage = peopleage(5); printf(\u0026#34;第5个人的年龄是%d岁\u0026#34;,fifage); return 0; } 三目运算符的简便算法：\n#include \u0026lt;stdio.h\u0026gt; int dfs(int n) { return n == 1 ? 10 : dfs(n - 1) + 2; } int main() { printf(\u0026#34;第5个人的年龄是%d岁\u0026#34;, dfs(5)); return 0; } ","permalink":"http://ownia.top/posts/the_magic_use_of_ternary_operator/","summary":"\u003cp\u003e慕课网（imooc）上一题：\u003c/p\u003e","title":"三目运算符的妙用"},{"content":"读了一首诗，想起来了你。附和了一首。\n 我越是逃离 却越是靠近你 我越是背过脸 却越是看见你\n我是一座孤岛 处在相思之水中 四面八方 隔绝我通向你\n一千零一面镜子 转映着你的容颜 我从你开始 我在你结束\n—— 埃姆朗·萨罗希《一千零一面镜子》\n 一千零一个你\n所以我不再想逃离 不再背过脸 我只是盯着你 就这样盯着你 把你整个揉入我\n这样 你就不再是一个孤岛 不再是一个荒凉的沙漠 不再是地上的一滩水 匆匆蒸发\n一千零一面镜子 转映着你的容颜 我从你开始 和你一起结束\n","permalink":"http://ownia.top/posts/the_most_special_you/","summary":"\u003cp\u003e读了一首诗，想起来了你。附和了一首。\u003c/p\u003e","title":"一千零一个你"},{"content":"少用爱这一个字眼，多用用“喜欢”。 你真的爱她吗？\n那么惊天动地的字眼，怎能如此平淡地说出来。 但你是非常非常，非常非常喜欢她。 喜欢她什么呢？ 可能你也不是很清楚。 可是你就是觉得自己很喜欢她。 你自动过滤了爱这个字眼。 为什么呢？ 因为， 你那样喜欢她。\n你会觉得她身上每个地方都是香的。 洗澡后的头发是香的，跑完步的汗味是香的，夏天上课时坐在她后面，看见他的脖颈，也是香的。\n你会觉得她身上每个地方都如此精雕细琢。 那鼻梁，那脸颊，那不加修饰的眼睛，那么诱人的身材，长裙下露出的小腿，高跟鞋中的脚背，不经意时的锁骨，双手叉腰的时候，昂头撅嘴的时候。如此可人。\n你会觉得无论她在干什么，都是风姿绰绰，百媚千娇\n喜欢一个人的时候， 比爱一个人的时候， 更敏感。\n","permalink":"http://ownia.top/posts/love_and_like/","summary":"\u003cp\u003e少用爱这一个字眼，多用用“喜欢”。\n你真的爱她吗？\u003c/p\u003e","title":"爱和喜欢"},{"content":"我站在车水马龙之间，除了你的背影，一无所有。 你左右脚轮番轻轻踮起脚尖，向着前方迈去。\n路人眼中，你是雀跃的。 可在我的眼里，你就如同宣纸上泛开的墨汁，聚不拢，收不回。 你呢，蹦蹦跳跳时又是怎样一副心情？ 阳光很稀薄，你的背影，却拉长到了我的脚尖。 它压在上面，我抬不起脚来。 你忽然回头了。 不是回眸一笑，我看不清你的表情。 你就在稀薄的阳光中，向我冲了过来。 你把我拥入怀中。瘦小的你，就这样把我抱住，紧的不可思议。 你馥郁的头发把我围绕，勒紧着我的脖子，让我就此窒息在你的怀抱里。\n","permalink":"http://ownia.top/posts/you_tips_toes/","summary":"\u003cp\u003e我站在车水马龙之间，除了你的背影，一无所有。\n你左右脚轮番轻轻踮起脚尖，向着前方迈去。\u003c/p\u003e","title":"你踮起脚尖"}]